syntax = "proto3";

package api;

option go_package = "github.com/vine-io/flow/api";
option java_package = "io.vine.flow.v1";
option java_multiple_files = true;

import "github.com/vine-io/flow/api/flow.proto";

service FlowRpc {
  rpc ListWorker (ListWorkerRequest) returns (ListWorkerResponse);
  rpc ListRegistry (ListRegistryRequest) returns (ListRegistryResponse);
  rpc Register (RegisterRequest) returns (RegisterResponse);
  rpc Call (CallRequest) returns (CallResponse);
  rpc Step (StepRequest) returns (StepResponse);
  rpc Pipe (stream PipeRequest) returns (stream PipeResponse);
  rpc DeployWorkflow (DeployWorkflowRequest) returns (DeployWorkflowResponse);
  rpc GetWorkflow(GetWorkflowRequest) returns (GetWorkflowResponse);
  rpc ListWorkflow (ListWorkflowRequest) returns (ListWorkflowResponse);
  rpc RunWorkflowInstance (RunWorkflowInstanceRequest) returns (stream RunWorkflowInstanceResponse);
  rpc ListWorkflowInstance (ListWorkflowInstanceRequest) returns (ListWorkflowInstanceResponse);
  rpc InspectWorkflowInstance (InspectWorkflowInstanceRequest) returns (InspectWorkflowInstanceResponse);
  rpc AbortWorkflowInstance (AbortWorkflowInstanceRequest) returns (AbortWorkflowInstanceResponse);
  rpc PauseWorkflowInstance (PauseWorkflowInstanceRequest) returns (PauseWorkflowInstanceResponse);
  rpc ResumeWorkflowInstance (ResumeWorkflowInstanceRequest) returns (ResumeWorkflowInstanceResponse);
  rpc ListInteractive(ListInteractiveRequest) returns (ListInteractiveResponse);
  rpc CommitInteractive(CommitInteractiveRequest) returns (CommitInteractiveResponse);
  rpc WatchWorkflowInstance (WatchWorkflowInstanceRequest) returns (stream WatchWorkflowInstanceResponse);
  rpc StepGet (StepGetRequest) returns (StepGetResponse);
  rpc StepPut (StepPutRequest) returns (StepPutResponse);
  rpc StepTrace (StepTraceRequest) returns (StepTraceResponse);
}

enum Topic {
  T_UNKNOWN = 0;
  T_CONN = 1;
  T_PING = 2;
  T_CALL = 3;
  T_STEP = 4;
}

message ListWorkerRequest {}

message ListWorkerResponse {
  repeated Worker workers = 1;
}

message ListRegistryRequest {}

message ListRegistryResponse {
  repeated Entity entities = 1;
  repeated Echo echoes = 2;
  repeated Step steps = 3;
}

message RegisterRequest {
  // +gen:required
  string id = 1;
  map<string, string> attrs = 2;
  repeated Entity entities = 3;
  repeated Echo echoes = 4;
  repeated Step steps = 5;
}

message RegisterResponse {}

message CallRequest {
  // +gen:required
  string id = 1;
  // +gen:required
  string name = 2;
  bytes request = 3;
}

message CallResponse {
  string name = 1;
  bytes data = 2;
  string error = 3;
}

message StepRequest {
  // +gen:required
  string cid = 1;
  // +gen:required
  string name = 2;
  // +gen:required
  StepAction action = 3;
  map<string, string> items = 4;
  map<string, string> args = 5;
  bytes entity = 6;
}

message StepResponse {
  string name = 1;
  bytes data = 2;
  string error = 3;
}

message PipeRequest {
  string id = 1;
  Topic topic = 2;
  Revision revision = 3;
  PipeCallResponse call = 4;
  PipeStepResponse step = 5;
}

message PipeResponse {
  Topic topic = 1;
  Revision revision = 2;
  PipeCallRequest call = 3;
  PipeStepRequest step = 4;
}

message PipeCallRequest {
  string name = 1;
  bytes data = 2;
}

message PipeCallResponse {
  string name = 1;
  bytes data = 2;
  string error = 3;
}

message PipeStepRequest {
  string wid = 1;
  string name = 2;
  string sid = 3;
  StepAction action = 4;
  map<string, string> items = 5;
  map<string, string> args = 6;
  bytes entity = 7;
}

message PipeStepResponse {
  string name = 1;
  bytes data = 2;
  string error = 3;
}

message ListWorkflowRequest {}

message ListWorkflowResponse {
  repeated api.BpmnResource resources = 1;
}

message GetWorkflowRequest {
  // +gen:required
  string id = 1;
}

message GetWorkflowResponse {
  api.BpmnResource resource = 1;
}

message DeployWorkflowRequest {
  // +gen:required
  api.BpmnResource resource = 1;
}

message DeployWorkflowResponse {
  int64 key = 1;
}

message RunWorkflowInstanceRequest {
  // +gen:required
  string id = 1;
  string name = 2;
  bool watch = 3;
}

message RunWorkflowInstanceResponse {
  WorkflowWatchResult result = 1;
}

message ListWorkflowInstanceRequest {}

message ListWorkflowInstanceResponse {
  repeated WorkflowSnapshot snapshots = 1;
}

message InspectWorkflowInstanceRequest {
  // +gen:required
  string wid = 1;
}

message InspectWorkflowInstanceResponse {
  Workflow workflow = 1;
}

message AbortWorkflowInstanceRequest {
  string wid = 1;
}

message AbortWorkflowInstanceResponse {}

message PauseWorkflowInstanceRequest {
  string wid = 1;
}

message PauseWorkflowInstanceResponse {}

message ResumeWorkflowInstanceRequest {
  string wid = 1;
}

message ResumeWorkflowInstanceResponse {}

message WatchWorkflowInstanceRequest {
  // +gen:required
  string wid = 1;
  // +gen:required
  string cid = 2;
}

message WatchWorkflowInstanceResponse {
  WorkflowWatchResult result = 1;
}

message ListInteractiveRequest {
  string pid = 1;
}

message ListInteractiveResponse {
  repeated api.Interactive interactive = 1;
}

message CommitInteractiveRequest {
  string pid = 1;
  string sid = 2;
  map<string, string> properties = 3;
}

message CommitInteractiveResponse {}

message StepGetRequest {
  // +gen:required
  string wid = 1;
  // +gen:required
  string step = 2;
  // +gen:required
  string key = 3;
}

message StepGetResponse {
  bytes value = 1;
}

message StepPutRequest {
  // +gen:required
  string wid = 1;
  // +gen:required
  string step = 2;
  // +gen:required
  string key = 3;
  // +gen:required
  string value = 4;
}

message StepPutResponse {}

message StepTraceRequest {
  // +gen:required
  string wid = 1;
  // +gen:required
  string step = 2;
  // +gen:required
  bytes text = 3;
}

message StepTraceResponse {}