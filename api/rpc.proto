syntax = "proto3";

package api;

import "github.com/vine-io/flow/api/flow.proto";

option go_package = "github.com/vine-io/flow/api";
option java_package = "io.vine.flow.v1";
option java_multiple_files = true;

service FlowRpc {
    rpc Register (RegisterRequest) returns (RegisterResponse);
    rpc Call (CallRequest) returns (CallResponse);
    rpc Step (StepRequest) returns (StepResponse);
    rpc Pipe (stream PipeRequest) returns (stream PipeResponse);
    rpc ListWorkflow (ListWorkflowRequest) returns (ListWorkflowResponse);
    rpc RunWorkflow (RunWorkflowRequest) returns (stream RunWorkflowResponse);
    rpc InspectWorkflow (InspectWorkflowRequest) returns (InspectWorkflowResponse);
    rpc AbortWorkflow (AbortWorkflowRequest) returns (AbortWorkflowResponse);
    rpc PauseWorkflow (PauseWorkflowRequest) returns (PauseWorkflowResponse);
    rpc ResumeWorkflow (ResumeWorkflowRequest) returns (ResumeWorkflowResponse);
    rpc WatchWorkflow (WatchWorkflowRequest) returns (stream WatchWorkflowResponse);
    rpc StepGet (StepGetRequest) returns (StepGetResponse);
    rpc StepPut (StepPutRequest) returns (StepPutResponse);
    rpc StepTrace (StepTraceRequest) returns (StepTraceResponse);
}

enum Topic {
    T_UNKNOWN = 0;
    T_CONN = 1;
    T_CALL = 2;
    T_STEP = 3;
}

message RegisterRequest {
    // +gen:required
    string id = 1;
    repeated Entity entities = 2;
    repeated Echo echoes = 3;
    repeated Step steps = 4;
}

message RegisterResponse {}

message CallRequest {
    // +gen:required
    string id = 1;
    // +gen:required
    string name = 2;
    // +gen:required
    bytes request = 3;
}

message CallResponse {
    string name = 1;
    bytes data = 2;
    string error = 3;
}

message StepRequest {
    string cid = 1;
    string name = 2;
    StepAction action = 3;
    map<string, bytes> items = 4;
    bytes entity = 5;
}

message StepResponse {
    string name = 1;
    bytes data = 2;
    string error = 3;
}

message PipeRequest {
    string id = 1;
    Topic topic = 2;
    Revision revision = 3;
    PipeCallResponse call = 4;
    PipeStepResponse step = 5;

}

message PipeResponse {
    Topic topic = 1;
    Revision revision = 2;
    PipeCallRequest call = 3;
    PipeStepRequest step = 4;
}

message PipeCallRequest {
    string name = 1;
    bytes data = 2;
}

message PipeCallResponse {
    string name = 1;
    bytes data = 2;
    string error = 3;
}

message PipeStepRequest {
    string wid = 1;
    string name = 2;
    string sid = 3;
    StepAction action = 4;
    map<string, bytes> items = 5;
    bytes entity = 6;
}

message PipeStepResponse {
    string name = 1;
    bytes data = 2;
    string error = 3;
}

message ListWorkflowRequest {}

message ListWorkflowResponse {
    repeated WorkflowSnapshot snapshots = 1;
}

message RunWorkflowRequest {
    // +gen:required
    Workflow workflow = 1;
    bool watch = 2;
}

message RunWorkflowResponse {
    WorkflowWatchResult result = 1;
}

message InspectWorkflowRequest {
    // +gen:required
    string wid = 1;
}

message InspectWorkflowResponse {
    Workflow workflow = 1;
}

message AbortWorkflowRequest {
    string wid = 1;
}

message AbortWorkflowResponse {}

message PauseWorkflowRequest {
    string wid = 1;
}

message PauseWorkflowResponse {}

message ResumeWorkflowRequest {
    string wid = 1;
}

message ResumeWorkflowResponse {}

message WatchWorkflowRequest {
    // +gen:required
    string wid = 1;
    // +gen:required
    string cid = 2;
}

message WatchWorkflowResponse {
    WorkflowWatchResult result = 1;
}

message StepGetRequest {
    // +gen:required
    string wid = 1;
    // +gen:required
    string step = 2;
    // +gen:required
    string key = 3;
}

message StepGetResponse {
    bytes value = 1;
}

message StepPutRequest {
    // +gen:required
    string wid = 1;
    // +gen:required
    string step = 2;
    // +gen:required
    string key = 3;
    // +gen:required
    string value = 4;
}

message StepPutResponse {}

message StepTraceRequest {
    // +gen:required
    string wid = 1;
    // +gen:required
    string step = 2;
    // +gen:required
    bytes text = 3;
}

message StepTraceResponse {}